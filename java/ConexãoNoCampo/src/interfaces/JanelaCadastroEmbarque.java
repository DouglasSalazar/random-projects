package interfaces;
import controle.ControladorCadastroEmbarque;
import entidades.Pidion;
import entidades.Data;
import entidades.Embarque;
import entidades.Usuário;
import entidades.Visão;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

public class JanelaCadastroEmbarque extends javax.swing.JFrame {
   ControladorCadastroEmbarque controlador;
    Vector<Visão<String>> lista_pidion ;
    Vector<Visão<String>> lista_usuário ;
    public JanelaCadastroEmbarque(ControladorCadastroEmbarque controlador) {
        this.controlador = controlador;       
        lista_pidion = Pidion.getVisões();
        lista_usuário = Usuário.getVisões();       
        initComponents();
        addListEmbarque();
        jTextID.setText("0");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelNome = new javax.swing.JPanel();
        jLabelData_Embarque = new javax.swing.JLabel();
        jLabelOS = new javax.swing.JLabel();
        jTextID = new javax.swing.JTextField();
        jTextOS = new javax.swing.JTextField();
        FormattedTextFieldData = new javax.swing.JFormattedTextField();
        jLabelLocal_Embarque = new javax.swing.JLabel();
        jTextLocal_Embarque = new javax.swing.JTextField();
        jLabelCidade = new javax.swing.JLabel();
        jTextCidade = new javax.swing.JTextField();
        jPanelProfissão = new javax.swing.JPanel();
        jLabelPidion = new javax.swing.JLabel();
        ComboBoxUsu = new javax.swing.JComboBox<>();
        ComboBoxPidion = new javax.swing.JComboBox<>();
        jLabelPidion1 = new javax.swing.JLabel();
        jPanelSenha1 = new javax.swing.JPanel();
        jLabelPesquisar = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButtonRemover = new javax.swing.JButton();
        jButtonInserir = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButtonInserir1 = new javax.swing.JButton();
        jPanelProfissão1 = new javax.swing.JPanel();
        jTextVolume_Embarque = new javax.swing.JTextField();
        jLabelVolume_Embarque = new javax.swing.JLabel();
        jLabelSituação = new javax.swing.JLabel();
        ComboBoxSituação = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Embarque");
        setLocation(new java.awt.Point(0, 0));
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(710, 600));
        setMinimumSize(new java.awt.Dimension(710, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(710, 600));
        setType(java.awt.Window.Type.UTILITY);

        jLabelData_Embarque.setText("Data do Embarque");

        jLabelOS.setText("OS:");

        jTextID.setEditable(false);
        jTextID.setToolTipText("");

        jTextOS.setToolTipText("");
        jTextOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextOSActionPerformed(evt);
            }
        });

        try {
            FormattedTextFieldData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        FormattedTextFieldData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormattedTextFieldDataActionPerformed(evt);
            }
        });

        jLabelLocal_Embarque.setText("Local de Embarque");

        jTextLocal_Embarque.setToolTipText("");
        jTextLocal_Embarque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextLocal_EmbarqueActionPerformed(evt);
            }
        });

        jLabelCidade.setText("Cidade");

        jTextCidade.setToolTipText("");
        jTextCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCidadeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelNomeLayout = new javax.swing.GroupLayout(jPanelNome);
        jPanelNome.setLayout(jPanelNomeLayout);
        jPanelNomeLayout.setHorizontalGroup(
            jPanelNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNomeLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanelNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FormattedTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelData_Embarque)
                    .addComponent(jTextID, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanelNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelOS)
                    .addComponent(jTextOS, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanelNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelLocal_Embarque)
                    .addComponent(jTextLocal_Embarque, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCidade)
                    .addComponent(jTextCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanelNomeLayout.setVerticalGroup(
            jPanelNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelNomeLayout.createSequentialGroup()
                .addComponent(jTextID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanelNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelOS)
                    .addComponent(jLabelData_Embarque)
                    .addComponent(jLabelLocal_Embarque)
                    .addComponent(jLabelCidade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FormattedTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextOS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextLocal_Embarque, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        jPanelProfissão.setMaximumSize(new java.awt.Dimension(500, 500));
        jPanelProfissão.setMinimumSize(new java.awt.Dimension(500, 500));
        jPanelProfissão.setName(""); // NOI18N

        jLabelPidion.setText("Usuário");

        ComboBoxUsu.setModel(new DefaultComboBoxModel (lista_usuário));

        ComboBoxPidion.setModel(new DefaultComboBoxModel (lista_pidion));

        jLabelPidion1.setText("Pidion");

        javax.swing.GroupLayout jPanelProfissãoLayout = new javax.swing.GroupLayout(jPanelProfissão);
        jPanelProfissão.setLayout(jPanelProfissãoLayout);
        jPanelProfissãoLayout.setHorizontalGroup(
            jPanelProfissãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProfissãoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanelProfissãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxUsu, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPidion, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelProfissãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPidion1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxPidion, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanelProfissãoLayout.setVerticalGroup(
            jPanelProfissãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelProfissãoLayout.createSequentialGroup()
                .addGroup(jPanelProfissãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPidion)
                    .addComponent(jLabelPidion1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelProfissãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxUsu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxPidion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(448, 448, 448))
        );

        jLabelPesquisar.setText("Consultar");

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonAlterar.setText("Alterar");
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButtonRemover.setText("Remover");
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });

        jButtonInserir.setText("Inserir");
        jButtonInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInserirActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButtonInserir1.setText("Limpar");
        jButtonInserir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInserir1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSenha1Layout = new javax.swing.GroupLayout(jPanelSenha1);
        jPanelSenha1.setLayout(jPanelSenha1Layout);
        jPanelSenha1Layout.setHorizontalGroup(
            jPanelSenha1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSenha1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanelSenha1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPesquisar)
                    .addGroup(jPanelSenha1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRemover)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonInserir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonInserir1)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanelSenha1Layout.setVerticalGroup(
            jPanelSenha1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSenha1Layout.createSequentialGroup()
                .addComponent(jLabelPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSenha1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jButtonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonInserir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonInserir1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanelProfissão1.setMaximumSize(new java.awt.Dimension(500, 500));
        jPanelProfissão1.setMinimumSize(new java.awt.Dimension(500, 500));
        jPanelProfissão1.setName(""); // NOI18N

        jLabelVolume_Embarque.setText("Volume do Embarque");

        jLabelSituação.setText("Situação");

        ComboBoxSituação.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Embarcando", "Suspenso" }));

        javax.swing.GroupLayout jPanelProfissão1Layout = new javax.swing.GroupLayout(jPanelProfissão1);
        jPanelProfissão1.setLayout(jPanelProfissão1Layout);
        jPanelProfissão1Layout.setHorizontalGroup(
            jPanelProfissão1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProfissão1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanelProfissão1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextVolume_Embarque, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelVolume_Embarque))
                .addGap(36, 36, 36)
                .addGroup(jPanelProfissão1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxSituação, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSituação))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanelProfissão1Layout.setVerticalGroup(
            jPanelProfissão1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProfissão1Layout.createSequentialGroup()
                .addGroup(jPanelProfissão1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelVolume_Embarque)
                    .addComponent(jLabelSituação))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelProfissão1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextVolume_Embarque, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxSituação, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelSenha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanelProfissão, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanelProfissão1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelSenha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelProfissão1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelProfissão, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        Embarque embarque = null;
        String mensagem_erro = null;
        String embarque_busca = jTextField1.getText();
        String Comp = "";
        if(!embarque_busca.equals(Comp)){
            embarque=embarque.buscaEmbarque(embarque_busca);   
            if(embarque == null){
                mensagem_erro = "Embarque não cadastrado";
            }
        }else{
            mensagem_erro="Selecione algum código";
            jTextID.setText(String.valueOf(0));
            FormattedTextFieldData.setText("");
            jTextOS.setText("");
            jTextLocal_Embarque.setText("");
            jTextCidade.setText("");
            ComboBoxUsu.setSelectedItem(0);
            jTextVolume_Embarque.setText("");
            
        }
        if(mensagem_erro==null){
            Visão <String> pidion = null;
            
            Visão <String> user = null;
            for(int i = 0; i< lista_usuário.size();i++){
                if(lista_usuário.get(i).getChave().equals(embarque.getUsuário())){
                    user = lista_usuário.get(i);
                }
            }
            for(int i = 0; i< lista_pidion.size();i++){
                if(lista_pidion.get(i).getInfo().equals(String.valueOf(Pidion.buscaPidionID(String.valueOf(embarque.getPidion())).getNum_Bunge()) +"-"+Pidion.buscaPidionID(String.valueOf(embarque.getPidion())).getModelo())){
                    pidion = lista_pidion.get(i);
                }
            }
            jTextID.setText(String.valueOf(embarque.getID()));
            FormattedTextFieldData.setText(String.valueOf(embarque.getData().getDia())+String.valueOf(embarque.getData().getMês())+String.valueOf(embarque.getData().getAno()));
            jTextOS.setText(String.valueOf(embarque.getOS()));
            jTextLocal_Embarque.setText(embarque.getLocal_Embarque());
            jTextCidade.setText(embarque.getCidade());
            ComboBoxPidion.setSelectedItem(pidion);
            jTextVolume_Embarque.setText(String.valueOf(embarque.getVolume_Embarque()));
            ComboBoxSituação.setSelectedItem(String.valueOf(embarque.getSituação()));  
            ComboBoxUsu.setSelectedItem(user);            
        }else{
            jTextID.setText(String.valueOf(0));
            FormattedTextFieldData.setText("");
            jTextOS.setText("");
            jTextLocal_Embarque.setText("");
            jTextCidade.setText("");
            ComboBoxUsu.setSelectedItem(0);
            jTextVolume_Embarque.setText("");
            

            JOptionPane.showMessageDialog(this,mensagem_erro,"ERRO",JOptionPane.ERROR_MESSAGE);            
       }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInserirActionPerformed
        Embarque embarque = obterEmbarqueInformado();
        String menssagem_erro = null;
        if (embarque != null){
            menssagem_erro = controlador.inserirEmbarque(embarque);
        }else{
            menssagem_erro = "Algum campo não foi preenchido";
        }
        if (menssagem_erro == null){
            menssagem_erro = "Embarque cadastrado com sucesso!";
            addListEmbarque();
            JOptionPane.showMessageDialog(this, menssagem_erro,"Sucesso",JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this,menssagem_erro,"ERRO",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonInserirActionPerformed

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        Embarque embarque = obterEmbarqueInformado();
        String menssagem_erro = null;
        if (embarque != null){
            menssagem_erro = controlador.alterarEmbarque(embarque);
        }else{
            menssagem_erro = "Algum campo não foi preenchido";
        }
        if (menssagem_erro == null){
            menssagem_erro = "Embarque alterado com sucesso!";
            addListEmbarque();
            JOptionPane.showMessageDialog(this, menssagem_erro,"Sucesso",JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this,menssagem_erro,"ERRO",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverActionPerformed
        Embarque embarque = obterEmbarqueInformado();
        String menssagem_erro = null;
        if (embarque != null){
            menssagem_erro = controlador.removerEmbarque(embarque);
        }else{
            menssagem_erro = "Algum campo não foi preenchido";
        }
        if (menssagem_erro == null){
            menssagem_erro = "Embarque removido com sucesso!";
            jTextID.setText(String.valueOf(0));
            FormattedTextFieldData.setText("");
            jTextOS.setText("");
            jTextLocal_Embarque.setText("");
            jTextCidade.setText("");
            ComboBoxUsu.setSelectedItem(0);
            ComboBoxPidion.setSelectedItem(0);
            jTextVolume_Embarque.setText("");
                       
            addListEmbarque();
            JOptionPane.showMessageDialog(this, menssagem_erro,"Sucesso",JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            JOptionPane.showMessageDialog(this,menssagem_erro,"ERRO",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonRemoverActionPerformed

    private void jTextOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextOSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextOSActionPerformed

    private void jTextLocal_EmbarqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextLocal_EmbarqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextLocal_EmbarqueActionPerformed

    private void jTextCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextCidadeActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void FormattedTextFieldDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormattedTextFieldDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FormattedTextFieldDataActionPerformed

    private void jButtonInserir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInserir1ActionPerformed
       jTextID.setText(String.valueOf(0));
            FormattedTextFieldData.setText("");
            jTextOS.setText("");
            jTextLocal_Embarque.setText("");
            jTextCidade.setText("");
            ComboBoxUsu.setSelectedItem(0);
            ComboBoxPidion.setSelectedItem(0);
            jTextVolume_Embarque.setText("");
    }//GEN-LAST:event_jButtonInserir1ActionPerformed

    private Embarque obterEmbarqueInformado(){
        Data data_Embarque;
        int id = Integer.parseInt(jTextID.getText());
        String data1 = FormattedTextFieldData.getText();
        if (data1.isEmpty()){ 
            return null;
        }else{
            String[] splitted = data1.split("/");
            data_Embarque = new Data(splitted[0],splitted[1],splitted[2]);
        }
        
        String OS = jTextOS.getText();
        if (OS.isEmpty()) return null;
        
        String local_Embarque = jTextLocal_Embarque.getText();
        if (local_Embarque.isEmpty()) return null;

        String cidade = jTextCidade.getText();
        if (cidade.isEmpty()) return null;

        String pidion = String.valueOf(ComboBoxPidion.getSelectedItem());
        String spllit[] = pidion.split("-");
        pidion = spllit[0];
        Pidion aux1 = null;
        if (pidion.isEmpty()){ 
            return null;
        }else{ 
            aux1 = Pidion.buscaPidion(pidion);
        }    
        
        String volume_Embarque = jTextVolume_Embarque.getText();
        if (volume_Embarque.isEmpty()) return null;
        
        int situação = ComboBoxSituação.getSelectedIndex();
        Embarque.Situação aux;
        if (situação == 0){
            aux = Embarque.Situação.Embarcando;
        }else{
            aux = Embarque.Situação.Suspenso;
        }
        
        String visão =  String.valueOf(lista_usuário.get(ComboBoxUsu.getSelectedIndex()).getChave());
        if (visão == null) return null;
        
        return new Embarque(id,data_Embarque,Integer.valueOf(OS),local_Embarque,cidade,aux1.getID(), Float.valueOf(volume_Embarque), aux, visão);
    }
    private void addListEmbarque(){
        Vector <Embarque> embarque = Embarque.buscaEmbarqueList();
        String dados;
        
        jTextArea1.setText(null);
        dados = "Embarques Cadastrados:\n\n";
        if (embarque != null){        
            for (int i=0; i < embarque.size() ; i++){
                dados = dados + embarque.get(i).toString();  
                dados = dados + "\n\n";
            }
            
        }else{
            dados = dados + "Nenhum embarque cadastrado!";
        }
        jTextArea1.setText(dados);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroEmbarque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroEmbarque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroEmbarque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroEmbarque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>


    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxPidion;
    private javax.swing.JComboBox<String> ComboBoxSituação;
    private javax.swing.JComboBox<String> ComboBoxUsu;
    private javax.swing.JFormattedTextField FormattedTextFieldData;
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonInserir;
    private javax.swing.JButton jButtonInserir1;
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JLabel jLabelCidade;
    private javax.swing.JLabel jLabelData_Embarque;
    private javax.swing.JLabel jLabelLocal_Embarque;
    private javax.swing.JLabel jLabelOS;
    private javax.swing.JLabel jLabelPesquisar;
    private javax.swing.JLabel jLabelPidion;
    private javax.swing.JLabel jLabelPidion1;
    private javax.swing.JLabel jLabelSituação;
    private javax.swing.JLabel jLabelVolume_Embarque;
    private javax.swing.JPanel jPanelNome;
    private javax.swing.JPanel jPanelProfissão;
    private javax.swing.JPanel jPanelProfissão1;
    private javax.swing.JPanel jPanelSenha1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextCidade;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextID;
    private javax.swing.JTextField jTextLocal_Embarque;
    private javax.swing.JTextField jTextOS;
    private javax.swing.JTextField jTextVolume_Embarque;
    // End of variables declaration//GEN-END:variables
}
